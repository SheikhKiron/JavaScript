JavaScript-ржПрж░ Data Types ржмрж╛ржВрж▓рж╛ ржмрзНржпрж╛ржЦрзНржпрж╛

JavaScript-ржП ржорзЛржЯ рзо ржзрж░ржирзЗрж░ ржбрж╛ржЯрж╛ ржЯрж╛ржЗржк рж░рзЯрзЗржЫрзЗтАФ

1я╕ПтГг String
2я╕ПтГг Number
3я╕ПтГг BigInt
4я╕ПтГг Boolean
5я╕ПтГг Undefined
6я╕ПтГг Null
7я╕ПтГг Symbol (ржПржЯрж╛ ржирж┐рзЯрзЗ ржЖрж▓рж╛ржжрж╛ ржЖрж▓рзЛржЪржирж╛ ржХрж░рж╛ рж╣ржмрзЗ ЁЯШК)
8я╕ПтГг Object
тЬЕ 1. String (рж╕рзНржЯрзНрж░рж┐ржВ)

ЁЯСЙ String рж╣рж▓рзЛ text (рж▓рзЗржЦрж╛) ржзрж╛рж░ржг ржХрж░рж╛рж░ ржЬржирзНржп ржмрзНржпржмрж╣рзГржд ржбрж╛ржЯрж╛ ржЯрж╛ржЗржкред
ЁЯСЙ ржПржЯрж┐ single quotes (''), double quotes (""), ржмрж╛ backticks (``) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж▓рзЗржЦрж╛ ржпрж╛рзЯред
ржЙржжрж╛рж╣рж░ржг:

let firstName = 'Ali';
firstName = 'Shovo'; 

// Single quote ржмрж╛ double quote ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛рзЯ
let fullName = "My Name is 'Ali'"; 

// Backticks ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржпрзЛржЧ ржХрж░рж╛ ржпрж╛рзЯ
let finalName = `My Name is ${firstName}`;
console.log(finalName); // Output: My Name is Shovo

тЭМ ржнрзБрж▓ ржХрзЛржб:

let finalName = My Name is ${firstName};

тЬФ рж╕ржарж┐ржХ ржХрзЛржб:

let finalName = `My Name is ${firstName}`;

ЁЯСЙ Backticks (``) ржмрзНржпржмрж╣рж╛рж░ ржирж╛ ржХрж░рж▓рзЗ, JavaScript ржПржЗ ржХрзЛржбржХрзЗ error рж╣рж┐рж╕рзЗржмрзЗ ржжрзЗржЦрж╛ржмрзЗред
тЬЕ 2. Number (рж╕ржВржЦрзНржпрж╛)

ЁЯСЙ JavaScript-ржП number рж╢рзБржзрзБржорж╛рждрзНрж░ ржПржХ ржзрж░ржирзЗрж░ рж╣рзЯ, рж╕рзЗржЯрж╛ integer (ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛) ржмрж╛ decimal (ржжрж╢ржорж┐ржХ рж╕ржВржЦрзНржпрж╛) рж╣рждрзЗ ржкрж╛рж░рзЗред
ржЙржжрж╛рж╣рж░ржг:

let age = 30;     // ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛ (Integer)
let ageNew = 30.5; // ржжрж╢ржорж┐ржХ рж╕ржВржЦрзНржпрж╛ (Float)

ЁЯСЙ JavaScript-ржП рж╕ржВржЦрзНржпрж╛ ржУ рж╕рзНржЯрзНрж░рж┐ржВ ржПржХрж╕рж╛ржерзЗ ржпрзЛржЧ ржХрж░рж▓рзЗ рж╕рзНржЯрзНрж░рж┐ржВ рж╣рж┐рж╕рзЗржмрзЗ ржЧржгржирж╛ рж╣рзЯ!

let age2 = finalName + 5 + 10;
console.log(age2); 
// Output: "My Name is Shovo510" (ржХрж╛рж░ржг finalName ржПржХржЯрж┐ рж╕рзНржЯрзНрж░рж┐ржВ)

тЭМ ржнрзБрж▓:

let calculation = age + age2 + firstName + age + age2;

тЬФ рж╕ржарж┐ржХ ржЙржкрж╛рзЯ:

let calculation = age + (5 + 10); // ржкрзНрж░ржержорзЗ рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛрж░ ржпрзЛржЧржлрж▓ рж╣рж┐рж╕рж╛ржм ржХрж░рж╛ рж╣ржмрзЗред
console.log(calculation); 

тЬЕ 3. BigInt (ржмрзЬ рж╕ржВржЦрзНржпрж╛)

ЁЯСЙ BigInt ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ ржЦрзБржм ржмрзЬ рж╕ржВржЦрзНржпрж╛ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рждрзЗред
ЁЯСЙ ржПржЯрж┐ "n" ржпрзБржХрзНржд ржХрж░рзЗ ржЕржержмрж╛ BigInt() ржлрж╛ржВрж╢ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж▓рзЗржЦрж╛ рж╣рзЯред
ржЙржжрж╛рж╣рж░ржг:

let numberBig = 9n; // рж╕рж░рж╛рж╕рж░рж┐ "n" ржпрзБржХрзНржд ржХрж░рзЗ BigInt
let numberBig2 = BigInt(age); // рж╕рж╛ржзрж╛рж░ржг рж╕ржВржЦрзНржпрж╛ржХрзЗ BigInt-ржП рж░рзВржкрж╛ржирзНрждрж░
console.log(numberBig2); // Output: 30n

тЭМ ржнрзБрж▓:

let result = numberBig + age; // BigInt ржЕржирзНржп ржбрж╛ржЯрж╛ ржЯрж╛ржЗржкрзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧ ржХрж░рж╛ ржпрж╛ржмрзЗ ржирж╛ред

тЬФ рж╕ржарж┐ржХ ржЙржкрж╛рзЯ:

let result = numberBig + BigInt(age);

тЬЕ 4. Boolean (ржмрзБрж▓рж┐рзЯрж╛ржи)

ЁЯСЙ Boolean рж╢рзБржзрзБржорж╛рждрзНрж░ ржжрзБржЯрж┐ ржорж╛ржи ржирж┐рждрзЗ ржкрж╛рж░рзЗ:
тЬФ true (рж╕рждрзНржп)
тЭМ false (ржорж┐ржерзНржпрж╛)
ржЙржжрж╛рж╣рж░ржг:

let ifAdult = false; // ржПржЯрж┐ ржорж┐ржерзНржпрж╛ ржорж╛ржи ржзрж░рзЗ ржирж┐ржЪрзНржЫрзЗ
console.log(ifAdult); // Output: false

тЬЕ 5. Undefined (ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд ржорж╛ржи)

ЁЯСЙ ржХрзЛржирзЛ ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржбрж┐ржХрзНрж▓рзЗрзЯрж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ, ржХрж┐ржирзНрждрзБ ржорж╛ржи ржжрзЗржУрзЯрж╛ рж╣рзЯржирж┐, рждржЦржи ржПржЯрж┐ undefined рж╣ржмрзЗред

let something;
console.log(something); // Output: undefined

тЬЕ 6. Null (рж╢рзВржирзНржп ржорж╛ржи)

ЁЯСЙ Null рж╣рж▓рзЛ ржПржХржЯрж┐ ржЗржЪрзНржЫрж╛ржХрзГрждржнрж╛ржмрзЗ рж╕рзЗржЯ ржХрж░рж╛ "рж╢рзВржирзНржп" ржорж╛ржиред
ЁЯСЙ ржПржЯрж┐ undefined ржерзЗржХрзЗ ржЖрж▓рж╛ржжрж╛ ржХрж╛рж░ржг ржПржЯрж┐ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж╛рж░ ржирж┐ржЬрзЗржЗ рж╕рзЗржЯ ржХрж░рзЗред

let someInfo = null;
console.log(someInfo); // Output: null

тЬЕ 7. Arrays (ржЕрзНржпрж╛рж░рзЗ)

ЁЯСЙ JavaScript-ржП ржЕрзНржпрж╛рж░рзЗ ржПржХржЯрж┐ multiple values ржзрж╛рж░ржг ржХрж░рждрзЗ ржкрж╛рж░рзЗ ржПржмржВ рж╕рзНржХрзЯрж╛рж░ ржмрзНрж░рзНржпрж╛ржХрзЗржЯ [] ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред
ржЙржжрж╛рж╣рж░ржг:

let fruits = ['Apple', 'Lemon', 'Pear', 'Oranges', 32, true, undefined, null];

fruits[4] = 'Mango'; // ржЕрзНржпрж╛рж░рзЗрж░ рзк ржиржорзНржмрж░ index-ржП Mango рж╕рзЗржЯ ржХрж░рж╛ рж╣рж▓рзЛред
console.log(fruits);

тЭМ ржнрзБрж▓:

let fruits = ['Apple', 'Lemon', 'Peer', 'Oranges', 32, true.undefined, null];

тЬФ рж╕ржарж┐ржХ ржЙржкрж╛рзЯ:

let fruits = ['Apple', 'Lemon', 'Pear', 'Oranges', 32, true, undefined, null];

ЁЯСЙ true.undefined рж╣рж▓рзЛ рж╕рж┐ржиржЯрзНржпрж╛ржХрзНрж╕ ржнрзБрж▓!
тЬЕ 8. Object (ржЕржмржЬрзЗржХрзНржЯ)

ЁЯСЙ Object рж╣рж▓рзЛ key-value pair ржзрж╛рж░ржг ржХрж░рждрзЗ ржкрж╛рж░рзЗ ржПржмржВ curly braces {} ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред
ржЙржжрж╛рж╣рж░ржг:

let student = {
  fullName: 'Ali Hossain',
  age: 32,
  dateOfBirth: 1992,
};

console.log(student); 
// Output: { fullName: 'Ali Hossain', age: 32, dateOfBirth: 1992 }

console.log(typeof student); 
// Output: object

ЁЯСЙ typeof ржЕржкрж╛рж░рзЗржЯрж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ, ржПржЯрж┐ object ржмрж▓рзЗ ржжрзЗржЦрж╛ржмрзЗред
тЬЕ рж╕ржВржХрзНрж╖рзЗржкрзЗ JavaScript-ржПрж░ Data Types
Data Type	ржЙржжрж╛рж╣рж░ржг
String	"Hello World"
Number	25, 3.14
BigInt	9007199254740991n
Boolean	true, false
Undefined	let x; (ржХрзЛржирзЛ ржорж╛ржи ржирзЗржЗ)
Null	let y = null;
Array	['Apple', 25, true]
Object	{name: "Ali", age: 25}




тЬЕ BigInt ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ?
рззя╕ПтГг BigInt рждрзИрж░рж┐ ржХрж░рж╛рж░ ржжрзБржЗржЯрж┐ ржЙржкрж╛рзЯ

// 1. "n" ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ BigInt рждрзИрж░рж┐ ржХрж░рж╛
let bigNumber1 = 9007199254740991n;
console.log(bigNumber1); // Output: 9007199254740991n

// 2. BigInt() ржлрж╛ржВрж╢ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рждрзИрж░рж┐ ржХрж░рж╛
let bigNumber2 = BigInt(9007199254740991);
console.log(bigNumber2); // Output: 9007199254740991n

тЬЕ BigInt ржПржмржВ рж╕рж╛ржзрж╛рж░ржг рж╕ржВржЦрзНржпрж╛ (Number) ржПрж░ ржоржзрзНржпрзЗ ржкрж╛рж░рзНржержХрзНржп

рж╕рж╛ржзрж╛рж░ржг рж╕ржВржЦрзНржпрж╛ (Number):

let num = 9007199254740991; // рж╕рж░рзНржмрзЛржЪрзНржЪ ржирж┐рж░рзНржнрзБрж▓ рж╕ржВржЦрзНржпрж╛
console.log(num + 1); // Output: 9007199254740992 (ржПржЦржиржУ рж╕ржарж┐ржХ)

console.log(num + 2); 
// Output: 9007199254740992 (ржнрзБрж▓ ржорж╛ржи, ржХрж╛рж░ржг ржирж┐рж░рзНржнрзБрж▓рждрж╛ рж╣рж╛рж░рж┐рзЯрзЗржЫрзЗ!)

ЁЯСЙ ржПржЦрж╛ржирзЗ ржжрзЗржЦрж╛ ржпрж╛ржЪрзНржЫрзЗ, ржмрзЬ рж╕ржВржЦрзНржпрж╛ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ рж╕ржорзЯ ржнрзБрж▓ ржЧржгржирж╛ рж╣ржЪрзНржЫрзЗ!

BigInt ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ:

let bigNum = 9007199254740991n;
console.log(bigNum + 2n); // Output: 9007199254740993n (рж╕ржарж┐ржХ ржорж╛ржи!)

ЁЯСЙ BigInt ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржлрж▓рзЗ ржХрзЛржирзЛ ржирж┐рж░рзНржнрзБрж▓рждрж╛ рж╣рж╛рж░рж╛рзЯржирж┐ред
тЭМ BigInt ржПржмржВ рж╕рж╛ржзрж╛рж░ржг рж╕ржВржЦрзНржпрж╛ ржПржХрж╕рж╛ржерзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛рзЯ ржирж╛!

BigInt ржПржмржВ рж╕рж╛ржзрж╛рж░ржг Number ржПржХрж╕рж╛ржерзЗ ржпрзЛржЧ, ржмрж┐рзЯрзЛржЧ, ржЧрзБржг, ржнрж╛ржЧ ржЗрждрзНржпрж╛ржжрж┐ ржХрж░рж╛ ржпрж╛ржмрзЗ ржирж╛ред

let num1 = 10; // рж╕рж╛ржзрж╛рж░ржг рж╕ржВржЦрзНржпрж╛
let num2 = 20n; // BigInt рж╕ржВржЦрзНржпрж╛

console.log(num1 + num2); // тЭМ Error: Cannot mix BigInt and other types

тЬЕ рж╕ржорж╛ржзрж╛ржи:
ЁЯСЙ рж╕рж╛ржзрж╛рж░ржг Number ржХрзЗ BigInt ржП рж░рзВржкрж╛ржирзНрждрж░ ржХрж░рждрзЗ рж╣ржмрзЗред

console.log(BigInt(num1) + num2); // тЬЕ Output: 30n

тЬЕ BigInt ржХрзЛржерж╛рзЯ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ?

BigInt рж╕рж╛ржзрж╛рж░ржгржд ржирж┐ржЪрзЗрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ ржмрзНржпржмрж╣рзГржд рж╣рзЯтАФ

ЁЯФ╣ ржЕржирзЗржХ ржмрзЬ рж╕ржВржЦрзНржпрж╛ ржЧрж╛ржгрж┐рждрж┐ржХ ржЧржгржирж╛рж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ (ржпрзЗржоржи: ржмрзНржпрж╛ржВржХрж┐ржВ, ржХрзНрж░рж┐ржкрзНржЯрзЛржЧрзНрж░рж╛ржлрж┐, ржмрж┐ржЬрзНржЮрж╛ржи ржУ ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи ржмрж┐рж╢рзНрж▓рзЗрж╖ржг)ред
ЁЯФ╣ ржорж┐рж▓рж┐рж╕рзЗржХрзЗржирзНржбрзЗ рж╕ржорзЯ ржЧржгржирж╛рж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ (Timestamp Calculation)
ЁЯФ╣ ржЕржирзЗржХ ржмрзЬ ржЖржЗржбрж┐ (ID) ржмрж╛ рж╕рж┐рж░рж┐рзЯрж╛рж▓ ржирж╛ржорзНржмрж╛рж░ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ

let hugeID = BigInt("123456789123456789123456789");
console.log(hugeID); // Output: 123456789123456789123456789n

тЬЕ BigInt ржПрж░ рж╕рж╛ржерзЗ ржмрж┐ржнрж┐ржирзНржи ржЕржкрж╛рж░рзЗрж╢ржи

BigInt ржжрж┐рзЯрзЗ рж╕рж╛ржзрж╛рж░ржг рж╕ржВржЦрзНржпрж╛рж░ ржорждрзЛ ржпрзЛржЧ, ржмрж┐рзЯрзЛржЧ, ржЧрзБржг, ржнрж╛ржЧ ржЗрждрзНржпрж╛ржжрж┐ ржХрж░рж╛ ржпрж╛рзЯ, рждржмрзЗ рж╕ржмрж╕ржорзЯ BigInt ржЯрж╛ржЗржкрзЗржЗ ржерж╛ржХрждрзЗ рж╣ржмрзЗред

let num1 = 50n;
let num2 = 20n;

console.log(num1 + num2); // тЬЕ Output: 70n
console.log(num1 - num2); // тЬЕ Output: 30n
console.log(num1 * num2); // тЬЕ Output: 1000n
console.log(num1 / num2); // тЬЕ Output: 2n (ржнржЧрзНржирж╛ржВрж╢ ржмрж╛ржж рж╣рзЯрзЗ ржпрж╛рзЯ!)
console.log(num1 % num2); // тЬЕ Output: 10n

ЁЯСЙ ржнрж╛ржЧржлрж▓ (/) ржПрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ ржжрж╢ржорж┐ржХ рж╕ржВржЦрзНржпрж╛ ржжрзЗржЦрж╛ржмрзЗ ржирж╛, рж╢рзБржзрзБ ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛ ржжрзЗржЦрж╛ржмрзЗ!

console.log(15n / 4n); // Output: 3n (3.75 ржжрзЗржЦрж╛ржмрзЗ ржирж╛, ржмрж░ржВ ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛ 3 ржжрзЗржЦрж╛ржмрзЗ)

тЬЕ BigInt ржПрж░ рж╕рзАржорж╛ржмржжрзНржзрждрж╛

ЁЯФ╕ BigInt ржжрж╢ржорж┐ржХ (floating point) рж╕ржВржЦрзНржпрж╛ рж░рж╛ржЦрждрзЗ ржкрж╛рж░рзЗ ржирж╛ред

let decimalBigInt = 10.5n; // тЭМ Error

ЁЯФ╕ BigInt ржУ ржЕржирзНржпрж╛ржирзНржп рж╕ржВржЦрзНржпрж╛ ржПржХрж╕рж╛ржерзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛ржмрзЗ ржирж╛ред

console.log(10n + 5); // тЭМ Error

ЁЯФ╕ BigInt ржПржмржВ JSON ржПржХрж╕рж╛ржерзЗ ржХрж╛ржЬ ржХрж░рзЗ ржирж╛ред

let obj = { value: 123456789123456789n };
JSON.stringify(obj); // тЭМ Error: Cannot serialize BigInt

ЁЯОп рж╕ржВржХрзНрж╖рзЗржкрзЗ
ржмрж┐рж╖рзЯ	рж╕рж╛ржзрж╛рж░ржг рж╕ржВржЦрзНржпрж╛ (Number)	BigInt
рж╕рж░рзНржмрзЛржЪрзНржЪ рж╕рзАржорж╛	2^53 - 1 (9007199254740991)	ржЕрж╕рзАржо (ржпржд ржмрзЬ ржжрж░ржХрж╛рж░)
ржирж┐рж░рзНржнрзБрж▓рждрж╛	ржирж╖рзНржЯ рж╣рждрзЗ ржкрж╛рж░рзЗ	рж╕ржорзНржкрзВрж░рзНржг ржирж┐рж░рзНржнрзБрж▓
ржжрж╢ржорж┐ржХ рж╕ржВржЦрзНржпрж╛	тЬЕ рж╕ржорж░рзНржерж┐ржд	тЭМ рж╕ржорж░рзНржерж┐ржд ржирзЯ
ржПржХрж╕рж╛ржерзЗ ржмрзНржпржмрж╣рж╛рж░	тЬЕ ржХрж░рж╛ ржпрж╛рзЯ	тЭМ ржХрж░рждрзЗ ржЧрзЗрж▓рзЗ Error
ЁЯОп рж╢рзЗрж╖ ржХржерж╛

ЁЯСЙ ржпржЦржи ржЫрзЛржЯ рж╕ржВржЦрзНржпрж╛ (рзз ржмрж┐рж▓рж┐рзЯржирзЗрж░ ржирж┐ржЪрзЗ) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ рж╣ржмрзЗ, рждржЦржи рж╕рж╛ржзрж╛рж░ржг Number ржЯрж╛ржЗржк ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ржЗ ржнрж╛рж▓рзЛред
ЁЯСЙ ржЦрзБржм ржмрзЬ рж╕ржВржЦрзНржпрж╛ (ржпрзЗржоржи ржЯрзНрж░рж╛ржиржЬрзЗржХрж╢ржи ID, рж╣рж┐рж╕рж╛ржмрж░ржХрзНрж╖ржг, timestamp ржЗрждрзНржпрж╛ржжрж┐) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ рж╣рж▓рзЗ BigInt ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ рж╣ржмрзЗред