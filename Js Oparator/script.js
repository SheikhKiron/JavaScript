JavaScript Operators Explained üöÄ

‡¶è‡¶á ‡¶ï‡ßã‡¶°‡ßá ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® JavaScript ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶Æ‡¶ø ‡¶ß‡¶æ‡¶™‡ßá ‡¶ß‡¶æ‡¶™‡ßá ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ï‡¶∞‡¶õ‡¶ø:
1Ô∏è‚É£ Arithmetic Operators (‡¶ó‡¶æ‡¶£‡¶ø‡¶§‡¶ø‡¶ï ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞)

‡¶ó‡¶æ‡¶£‡¶ø‡¶§‡¶ø‡¶ï ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶®‡¶ø‡ßü‡ßá ‡¶ó‡¶£‡¶®‡¶æ ‡¶ï‡¶∞‡ßá‡•§

let a = 50;
let b = 20;
let c = a % b; // 50 ‡¶ï‡ßá 20 ‡¶¶‡¶ø‡ßü‡ßá ‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡¶≤‡ßá ‡¶≠‡¶æ‡¶ó‡¶∂‡ßá‡¶∑ (remainder) ‡¶π‡¶¨‡ßá 10
console.log(c); // Output: 10

‚úÖ % (Modulus Operator): ‡¶è‡¶ü‡¶ø ‡¶¶‡ßÅ‡¶á ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶≠‡¶æ‡¶ó‡¶∂‡ßá‡¶∑ (remainder) ‡¶¶‡ßá‡ßü‡•§
Even or Odd Number Check (‡¶Æ‡¶°‡ßÅ‡¶≤‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ú‡ßã‡ßú ‡¶®‡¶æ ‡¶¨‡¶ø‡¶ú‡ßã‡ßú ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ)

/*
let userInput = prompt('Enter a Number');
let number = parseInt(userInput);

if (number % 2 === 0) {
  console.log(`${number} is even number`);
} else {
  console.log(`${number} is odd number`);
}
*/

‚úÖ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:

    prompt() ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶®‡ßá‡ßü‡•§
    parseInt() ‡¶á‡¶®‡¶™‡ßÅ‡¶ü‡¶ï‡ßá ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ (Integer) ‡¶¨‡¶æ‡¶®‡¶æ‡ßü‡•§
    if (number % 2 === 0) ‚Äì ‡¶Ø‡¶¶‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡ß® ‡¶¶‡¶ø‡ßü‡ßá ‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡¶≤‡ßá ‡¶≠‡¶æ‡¶ó‡¶∂‡ßá‡¶∑ ‡ß¶ ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶è‡¶ü‡¶ø ‡¶ú‡ßã‡ßú (Even) ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡•§
    ‡¶®‡ßü‡¶§‡ßã ‡¶è‡¶ü‡¶ø ‡¶¨‡¶ø‡¶ú‡ßã‡ßú (Odd) ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡•§

2Ô∏è‚É£ Increment & Decrement Operators (‡¶¨‡ßÉ‡¶¶‡ßç‡¶ß‡¶ø ‡¶ì ‡¶π‡ßç‡¶∞‡¶æ‡¶∏ ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞)

let x = 10;
x = x + 1; // x = 11
x++; // x = 12 (‡¶è‡¶ï ‡¶ß‡¶æ‡¶™‡ßá 1 ‡¶Ø‡ßã‡¶ó)
console.log(`Increment ${x}`); // Output: Increment 12

‚úÖ x++ (Increment Operator): ‡¶è‡¶ü‡¶ø ‡¶Æ‡¶æ‡¶® ‡ßß ‡¶¨‡¶æ‡ßú‡¶ø‡ßü‡ßá ‡¶¶‡ßá‡ßü‡•§

let y = 20;
y = y - 1; // y = 19
y--; // y = 18 (‡¶è‡¶ï ‡¶ß‡¶æ‡¶™‡ßá 1 ‡¶ï‡¶Æ‡¶æ‡¶®‡ßã ‡¶π‡¶≤‡ßã)
console.log(`Decrement ${y}`); // Output: Decrement 18

‚úÖ y-- (Decrement Operator): ‡¶è‡¶ü‡¶ø ‡¶Æ‡¶æ‡¶® ‡ßß ‡¶ï‡¶Æ‡¶ø‡ßü‡ßá ‡¶¶‡ßá‡ßü‡•§
3Ô∏è‚É£ Comparison Operators (‡¶§‡ßÅ‡¶≤‡¶®‡¶æ ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞)

‡¶è‡¶á ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶§‡ßÅ‡¶≤‡¶®‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶¨‡¶Ç true ‡¶¨‡¶æ false ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§

let p = 5;
let q = 10;
console.log(p == q);  // false (5 ‡¶è‡¶¨‡¶Ç 10 ‡¶∏‡¶Æ‡¶æ‡¶® ‡¶®‡ßü)
console.log(p === q); // false (‡¶Æ‡¶æ‡¶® ‡¶ì ‡¶ü‡¶æ‡¶á‡¶™ ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ‡¶á ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá)
console.log(p !== q); // true  (5 ‡¶è‡¶¨‡¶Ç 10 ‡¶∏‡¶Æ‡¶æ‡¶® ‡¶®‡ßü, ‡¶§‡¶æ‡¶á true)
console.log(p > q);   // false (5 ‡¶¨‡ßú ‡¶®‡ßü 10 ‡¶•‡ßá‡¶ï‡ßá)
console.log(p < q);   // true  (5 ‡¶õ‡ßã‡¶ü 10 ‡¶•‡ßá‡¶ï‡ßá)
console.log(p <= q);  // true  (5 ‡¶õ‡ßã‡¶ü ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶∏‡¶Æ‡¶æ‡¶® 10 ‡¶è‡¶∞)
console.log(p >= q);  // false (5 ‡¶¨‡ßú ‡¶¨‡¶æ ‡¶∏‡¶Æ‡¶æ‡¶® 10 ‡¶è‡¶∞)

‚úÖ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:

    == ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Æ‡¶æ‡¶® ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá‡•§
    === ‡¶Æ‡¶æ‡¶® ‡¶ì ‡¶ü‡¶æ‡¶á‡¶™ ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ‡¶á ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá‡•§
    !== ‡¶Æ‡¶æ‡¶® ‡¶ì ‡¶ü‡¶æ‡¶á‡¶™ ‡¶¶‡ßÅ‡¶ü‡ßã‡¶á ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá‡•§

4Ô∏è‚É£ Logical Operators (‡¶≤‡¶ú‡¶ø‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤ ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞)

‚úÖ AND (&&), OR (||), NOT (!) ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶∂‡¶∞‡ßç‡¶§ (Condition) ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡•§

let p = 5;
let q = 10;

// AND (&&) - ‡¶â‡¶≠‡ßü ‡¶∂‡¶∞‡ßç‡¶§ ‡¶∏‡¶§‡ßç‡¶Ø ‡¶π‡¶≤‡ßá True ‡¶π‡¶¨‡ßá‡•§
console.log(p > 2 && q < 15); // true (‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ‡¶á ‡¶∏‡¶§‡ßç‡¶Ø)

// OR (||) - ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶§‡ßç‡¶Ø ‡¶π‡¶≤‡ßá True ‡¶π‡¶¨‡ßá‡•§
console.log(p > 2 || q > 15); // true (‡¶è‡¶ï‡¶ü‡¶ø ‡¶∂‡¶∞‡ßç‡¶§ ‡¶∏‡¶§‡ßç‡¶Ø)

// NOT (!) - ‡¶∂‡¶∞‡ßç‡¶§ ‡¶¨‡¶ø‡¶™‡¶∞‡ßÄ‡¶§ ‡¶ï‡¶∞‡ßá‡•§
console.log(!(p > q)); // true (p > q ‡¶Æ‡¶ø‡¶•‡ßç‡¶Ø‡¶æ ‡¶õ‡¶ø‡¶≤, ‡¶§‡¶æ‡¶á true ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá)

5Ô∏è‚É£ Assignment Operators (‡¶Æ‡¶æ‡¶® ‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶£ ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞)

‡¶è‡¶á ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞ ‡¶¶‡¶ø‡ßü‡ßá ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶® ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§

let j = 10;
let k = 20;

j = j + k; // j = 10 + 20 = 30
j += k;    // j = 30 + 20 = 50

j = j - k; // j = 50 - 20 = 30
j -= k;    // j = 30 - 20 = 10

j = j * k; // j = 10 * 20 = 200
j *= k;    // j = 200 * 20 = 4000

j = j / k; // j = 4000 / 20 = 200
j /= k;    // j = 200 / 20 = 10

j %= k;    // j = 10 % 20 = 10 (‡¶≠‡¶æ‡¶ó‡¶∂‡ßá‡¶∑)
j **= k;   // j = 10 ** 20 (10 ‡¶è‡¶∞ 20 ‡¶§‡¶Æ ‡¶ò‡¶æ‡¶§)
console.log(j);

‚úÖ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:

    += ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßá‡•§
    -= ‡¶¨‡¶ø‡ßü‡ßã‡¶ó ‡¶ï‡¶∞‡ßá‡•§
    *= ‡¶ó‡ßÅ‡¶£ ‡¶ï‡¶∞‡ßá‡•§
    /= ‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡ßá‡•§
    %= ‡¶≠‡¶æ‡¶ó‡¶∂‡ßá‡¶∑ ‡¶¶‡ßá‡ßü‡•§
    **= ‡¶ò‡¶æ‡¶§ (Exponent) ‡¶®‡¶ø‡¶∞‡ßç‡¶£‡ßü ‡¶ï‡¶∞‡ßá‡•§

6Ô∏è‚É£ Ternary Operator (‡¶∂‡¶∞‡ßç‡¶ü‡¶ï‡¶æ‡¶ü ‡¶ï‡¶®‡ßç‡¶°‡¶ø‡¶∂‡¶®‡¶æ‡¶≤ ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞)

? : ‡¶¶‡¶ø‡ßü‡ßá if-else ‡¶è‡¶∞ ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡¶ø‡¶™‡ßç‡¶§ ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü ‡¶≤‡ßá‡¶ñ‡¶æ ‡¶Ø‡¶æ‡ßü‡•§

let t = a < b ? 'True' : 'False';
console.log(t); // Output: False (50 < 20 ‡¶Æ‡¶ø‡¶•‡ßç‡¶Ø‡¶æ, ‡¶§‡¶æ‡¶á 'False' ‡¶π‡¶¨‡ßá)

‚úÖ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:

    ‡¶Ø‡¶¶‡¶ø a < b ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá 'True'‡•§
    ‡¶®‡¶æ‡¶π‡¶≤‡ßá 'False'‡•§

7Ô∏è‚É£ Traditional if-else Statement (‡¶Ø‡¶¶‡¶ø-‡¶®‡¶á ‡¶∂‡¶∞‡ßç‡¶§)

if (a > b) console.log('True');
else console.log('False');

‚úÖ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:

    ‡¶Ø‡¶¶‡¶ø a > b ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá 'True' ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶π‡¶¨‡ßá‡•§
    ‡¶®‡¶æ‡¶π‡¶≤‡ßá 'False'‡•§

8Ô∏è‚É£ String Variable Example (‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤)

let firstName = 'Ali';

‚úÖ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:

    firstName ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤‡ßá Ali ‡¶Æ‡¶æ‡¶® ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§
    ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç (text) ‡¶ü‡¶æ‡¶á‡¶™‡ßá‡¶∞ ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤‡•§

üî• ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡ßá‡¶™‡ßá JavaScript Operators Summary:
‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞	‡¶ï‡¶æ‡¶ú	‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£
+	‡¶Ø‡ßã‡¶ó	5 + 2 = 7
-	‡¶¨‡¶ø‡ßü‡ßã‡¶ó	5 - 2 = 3
*	‡¶ó‡ßÅ‡¶£	5 * 2 = 10
/	‡¶≠‡¶æ‡¶ó	10 / 2 = 5
%	‡¶≠‡¶æ‡¶ó‡¶∂‡ßá‡¶∑	10 % 3 = 1
**	‡¶ò‡¶æ‡¶§	2 ** 3 = 8
++	‡ßß ‡¶¨‡¶æ‡ßú‡¶æ‡ßü	x++
--	‡ßß ‡¶ï‡¶Æ‡¶æ‡ßü	x--
==	‡¶Æ‡¶æ‡¶® ‡¶ö‡ßá‡¶ï	5 == "5" ‚Üí true
===	‡¶Æ‡¶æ‡¶® ‡¶ì ‡¶ü‡¶æ‡¶á‡¶™ ‡¶ö‡ßá‡¶ï	5 === "5" ‚Üí false
&&	AND (‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ‡¶á ‡¶∏‡¶§‡ßç‡¶Ø ‡¶π‡¶≤‡ßá true)	true && false ‚Üí false
`		`
!	NOT (‡¶¨‡¶ø‡¶™‡¶∞‡ßÄ‡¶§ ‡¶ï‡¶∞‡ßá)	!true ‚Üí false
